{"version":3,"sources":["components/MainLayout/styles.module.less","components/Header/styles.module.less","selectors/auth.selector.js","constants/routerPaths.const.js","components/Header/Header.jsx","components/MainLayout/MainLayout.jsx","constants/common.const.js","api/api.js","api/vehiclesApi.js","api/authApi.js","actions/vehiclesActions.js","selectors/vehicles.selector.js","reducers/ui.reducer.js","constants/modals.const.js","selectors/ui.selectors.js","actions/authActions.js","components/AuthModal/AuthModal.jsx","pages/VehiclesList/VehiclesList.jsx","pages/CurrentCar/CurrentCar.jsx","pages/HistoryRecords/HistoryRecords.jsx","pages/Order/Order.jsx","navigation/Navigation.jsx","App.js","reducers/vehicles.reducer.js","reducers/auth.reducer.js","utils/utils.js","reducers/index.js","store/store.js","serviceWorker.js","index.js"],"names":["module","exports","getAuthState","state","auth","ROUTER_PATHS","HeaderAntd","Header","isAuthorized","useSelector","history","useHistory","handleMenuClick","useCallback","handleLogOut","handleNavigate","path","push","menu","onClick","Item","className","styles","appHeader","Title","level","overlay","icon","UserOutlined","MainLayout","children","appLayout","mainSection","LS_IS_AUTH_KEY","LS_TOKEN_KEY","Api","this","api","axios","create","baseURL","process","interceptors","request","use","config","token","localStorage","getItem","headers","get","id","login","email","password","name","post","user","signUp","roleId","gender","getVehiclesList","createAsyncThunk","a","vehiclesApi","data","getVehicleById","getVehcileById","getVegiclesState","vehicles","uiSlice","createSlice","initialState","activeModal","modalParams","reducers","showModal","payload","hideModal","setModalParams","clearModalParams","MODALS","getUiState","ui","loginAction","submitData","authApi","setItem","layout","labelCol","span","wrapperCol","tailLayout","offset","AuthModal","dispatch","useDispatch","handleSubmit","values","result","error","message","handleHide","actions","title","visible","onOk","onCancel","footer","initialValues","remember","onFinish","label","rules","required","Password","type","htmlType","Meta","VehiclesList","useEffect","console","log","handleOrderCar","carId","gutter","map","image","isFree","price","brandName","brand","style","width","cover","alt","src","CheckCircleTwoTone","twoToneColor","HeartTwoTone","description","CurrentCar","HistoryRecors","Order","match","params","vehicle","Navigation","component","exact","App","vehiclesSlice","isLoading","extraReducers","builder","addCase","pending","fulfilled","authSlice","rootReducer","combineReducers","reducer","store","configureStore","devTools","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6579decc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appLayout\":\"appLayout--2Fi_y\",\"mainSection\":\"mainSection--1QRhc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appHeader\":\"appHeader--1vzd9\",\"userIcon\":\"userIcon--2nqHm\"};","export const getAuthState = state => state.auth;\n","export const ROUTER_PATHS = {\n  index: '/',\n  userHistory: '/user/history',\n  yourCar: '/user/current',\n  order: '/order/:id',\n};","import React, { useCallback } from 'react';\nimport {Typography, Layout, Avatar, Dropdown, Menu } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { UserOutlined,  BookOutlined, CarOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport { getAuthState } from '../../selectors/auth.selector';\nimport styles from './styles.module.less';\nimport { ROUTER_PATHS } from '../../constants/routerPaths.const';\n\nconst { Header: HeaderAntd } = Layout;\n\n\nexport const Header = () => {\n  const { isAuthorized } = useSelector(getAuthState);\n  const history = useHistory();\n\n  const handleMenuClick = useCallback(() => {}, []);\n\n  const handleLogOut = useCallback(() => {}, []);\n\n  const handleNavigate = useCallback((path) => () => {\n    history.push(path);\n  }, [history]);\n\n  const menu = (\n    <Menu onClick={handleMenuClick}>\n      <Menu.Item key=\"1\" onClick={handleNavigate(ROUTER_PATHS.yourCar)}>\n        Your car\n      </Menu.Item>\n      <Menu.Item key=\"2\" onClick={handleNavigate(ROUTER_PATHS.userHistory)}>\n        History\n      </Menu.Item>\n      <Menu.Item key=\"3\" onClick={handleLogOut}>\n        Log out\n      </Menu.Item>\n    </Menu>\n  );\n\n  return <HeaderAntd className={styles.appHeader}>\n  <div/>\n  <Typography.Title level={2} onClick={handleNavigate(ROUTER_PATHS.index)}>CarSharing</Typography.Title>\n  {isAuthorized ?  <Dropdown overlay={menu}><Avatar icon={<UserOutlined />}/></Dropdown>: <div/>}\n</HeaderAntd>\n};","import React  from 'react';\nimport { Layout } from 'antd';\nimport { Header } from '../Header/Header';\nimport styles from './styles.module.less';\n\n\nexport const MainLayout = ({ children }) => {\n  return <Layout className={styles.appLayout}>\n  <Header />\n  <Layout className={styles.mainSection}>\n    {children}\n  </Layout>\n</Layout>;\n}","export const LS_IS_AUTH_KEY = 'isAuth';\n\nexport const LS_TOKEN_KEY = 'token';\n","import axios from 'axios';\nimport { LS_TOKEN_KEY } from '../constants/common.const';\n\n\nexport class Api {\n  constructor() {\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_API_PREFIX,\n    })\n\n    this.api.interceptors.request.use((config) => {\n      const token =localStorage.getItem(LS_TOKEN_KEY);\n\n      if(token) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n\n      return config;\n    });\n  }\n}","import { Api } from './api';\n\n\n\nclass VehiclesApi extends Api {\n  getVehiclesList() {\n    return this.api.get('vehicles');\n  }\n\n  getVehcileById(id) {\n    return this.api.get(`vehicles/${id}`);\n  }\n}\n\nexport default new VehiclesApi();","import { Api } from './api';\n\nclass AuthApi extends Api {\n  login = ({ email, name, password }) => {\n    return this.api.post('auth/login', {\n      user: {\n        email,\n        password,\n      }\n    });\n  }\n\n  signUp = ({ email, name, password }) => {\n    return this.api.post('auth/signup', { \n      email,\n      name,\n      password,\n      roleId: 1,\n      gender: 1,\n    });\n  }\n}\n\nexport default new AuthApi();","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { vehiclesApi } from '../api';\n\n\n\nexport const getVehiclesList = createAsyncThunk('@vehicles/get-list', async () => {\n  const { data } = await vehiclesApi.getVehiclesList();\n\n  return data;\n});\n\nexport const getVehicleById = createAsyncThunk('@vehicles/get-vehicle-by-id', async (id) => {\n  const { data } = await vehiclesApi.getVehcileById(id);\n\n  return data;\n});","export const getVegiclesState = state => state.vehicles;\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  activeModal: null,\n  modalParams: {},\n}\n\nexport const uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    showModal: (state, { payload }) => ({ ...state, activeModal: payload }),\n    hideModal: (state) => ({ ...state, activeModal: null }),\n    setModalParams: (state, { payload }) => ({ ...state, modalParams: payload }),\n    clearModalParams: (state) => ({ ...state, modalParams: null }),\n  },\n});\n","export const MODALS = {\n  auth: 'AUTH_MODAL',\n};\n","export const getUiState = state => state.ui;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { authApi } from '../api';\nimport { LS_IS_AUTH_KEY, LS_TOKEN_KEY } from '../constants/common.const';\n\n\n\nexport const loginAction = createAsyncThunk('@auth/login', async (submitData) => {\n  const { data } = await authApi.login(submitData);\n\n  localStorage.setItem(LS_TOKEN_KEY, data.token);\n  localStorage.setItem(LS_IS_AUTH_KEY, 'true');\n\n  return data;\n});","import React, { useCallback } from 'react';\nimport { Modal, Form, Button, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { message  } from 'antd';\nimport { getUiState } from '../../selectors/ui.selectors';\nimport { uiSlice } from '../../reducers/ui.reducer';\nimport { loginAction } from '../../actions/authActions';\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\n\nexport const AuthModal = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { activeModal, modalParams }  = useSelector(getUiState);\n\n  const handleSubmit = useCallback(async (values)=> {\n    const result = await dispatch(loginAction(values));\n\n    if(result?.error) {\n      message.error('Invalid credential');\n      return;\n    }\n\n    history.push(`order/${modalParams?.id}`);\n\n  }, [dispatch, history, modalParams]);\n\n  const handleHide = useCallback(() => {\n    dispatch(uiSlice.actions.hideModal());\n  }, [dispatch]);\n\n  return  <Modal title=\"Login\" visible={activeModal} onOk={handleSubmit} onCancel={handleHide} footer={[\n    <Button key=\"back\" onClick={handleHide}>\n      Cancel\n  </Button>,\n  ]}>\n  <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{ remember: true }}\n      onFinish={handleSubmit}\n    >\n      <Form.Item\n        label=\"E-mail\"\n        name=\"email\"\n        rules={[{ required: true, message: 'Please input your email!' }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your password!' }]}\n      >\n        <Input.Password />\n      </Form.Item>\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n\n</Modal>\n}","import React, { useCallback, useEffect } from 'react';\nimport { Card, Row, Col } from 'antd';\nimport { HeartTwoTone, CheckCircleTwoTone } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getVehiclesList } from '../../actions/vehiclesActions';\nimport { getVegiclesState } from '../../selectors/vehicles.selector';\nimport { getAuthState } from '../../selectors/auth.selector';\nimport { useHistory } from 'react-router';\nimport { ROUTER_PATHS } from '../../constants/routerPaths.const';\nimport { uiSlice } from '../../reducers/ui.reducer';\nimport { MODALS } from '../../constants/modals.const';\nimport { AuthModal } from '../../components/AuthModal/AuthModal';\n\nconst { Meta } = Card;\n\nexport const VehiclesList = () => {\n  const history = useHistory();\n  const { isAuthorized } = useSelector(getAuthState);\n  const { vehicles } = useSelector(getVegiclesState);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getVehiclesList());\n  }, [dispatch]) \n\n  console.log(vehicles, 'vehicles');\n\n\n  const handleOrderCar = useCallback((carId) => () => {\n    if(isAuthorized) {\n      history.push(`order/${carId}`);\n      return;\n    }\n\n    dispatch(uiSlice.actions.showModal(MODALS.auth));\n    dispatch(uiSlice.actions.setModalParams({ id: carId }));\n  },[isAuthorized, history, dispatch]);\n\n  return <Row gutter={[16, 16]}>\n    <AuthModal />\n    {vehicles.map( ({ id, image, name, isFree, price, brand: { name: brandName } }) => (\n    <Col span={6} key={id}>\n  <Card\n    style={{ width: 300 }}\n    cover={\n      <img\n        alt={name}\n        src={image}\n      />\n    }\n    actions={[\n      isFree && <CheckCircleTwoTone twoToneColor=\"#52c41a\" />,\n      <div>{price}$ per hour</div>,\n      <HeartTwoTone twoToneColor=\"#eb2f96\" onClick={handleOrderCar(id)} />,\n    ]}\n  >\n    <Meta title={brandName} description={name} />\n  </Card></Col>))}\n  </Row>;\n};","import React from 'react';\n\n\nexport const CurrentCar = () => {\n  return <div>CurrentCar</div>;\n}\n","import React from 'react';\n\n\nexport const HistoryRecors = () => {\n  return <div>CurrentCar</div>;\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getVehicleById } from '../../actions/vehiclesActions';\nimport { getVegiclesState } from '../../selectors/vehicles.selector';\n\n\nexport const Order = ({ match: { params: { id }}}) => {\n  const dispatch = useDispatch();\n  const { vehicle } = useSelector(getVegiclesState);\n\n  useEffect(() => {\n    dispatch(getVehicleById(id));\n  }, [dispatch, id]);\n\n  return vehicle ? <div>Order</div> : null;\n};","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { MainLayout } from '../components/MainLayout/MainLayout';\nimport { ROUTER_PATHS } from '../constants/routerPaths.const';\n\nimport { VehiclesList, HistoryRecors, CurrentCar, Order } from '../pages';\n\n\nexport const Navigation = () => {\n  return (<Router>\n           <Switch>\n             <MainLayout>\n              <Route path={ROUTER_PATHS.index} component={VehiclesList} exact/>\n              <Route path={ROUTER_PATHS.yourCar} component={CurrentCar} exact/>\n              <Route path={ROUTER_PATHS.userHistory} component={HistoryRecors} exact/>\n              <Route path={ROUTER_PATHS.order} component={Order} exact/>\n            </MainLayout>\n        </Switch>\n        </Router>\n        );\n}","import React from 'react';\n\nimport { Navigation } from './navigation/Navigation';\n\nfunction App() {\n  return <Navigation />\n}\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit'\nimport { getVehiclesList, getVehicleById } from '../actions/vehiclesActions';\n\nconst initialState = {\n  isLoading: false,\n  vehicles: [],\n  vehicle: null,\n}\n\nexport const vehiclesSlice = createSlice({\n  name: 'vehicles',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(getVehiclesList.pending, (state) => ({\n        ...state,\n        isLoading: true,\n      }))\n      .addCase(getVehiclesList.fulfilled, (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        vehicles: payload,\n      }))\n      .addCase(getVehicleById.pending, (state) => ({\n        ...state,\n        isLoading: true,\n      }))\n      .addCase(getVehicleById.fulfilled, (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        vehicle: payload,\n      }))\n    }\n  });\n  ","import { createSlice } from '@reduxjs/toolkit'\nimport { loginAction } from '../actions/authActions';\nimport { getAuthStateFromLS } from '../utils/utils';\n\nconst initialState = {\n  isAuthorized: !!getAuthStateFromLS(),\n  user: null,\n}\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => builder.addCase(loginAction.fulfilled, (state, { payload }) => ({ ...state, user: payload, isAuthorized: true  }))\n});\n","import { LS_IS_AUTH_KEY } from '../constants/common.const';\n\nexport const getAuthStateFromLS = () => localStorage.getItem(LS_IS_AUTH_KEY);\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { vehiclesSlice } from './vehicles.reducer';\nimport { authSlice } from './auth.reducer';\nimport { uiSlice } from './ui.reducer';\n\n\nexport const rootReducer =  combineReducers({\n  vehicles: vehiclesSlice.reducer,\n  auth: authSlice.reducer,\n  ui: uiSlice.reducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { rootReducer } from '../reducers';\n\nexport const store = configureStore({\n  devTools: true,\n  reducer: rootReducer,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './store/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}